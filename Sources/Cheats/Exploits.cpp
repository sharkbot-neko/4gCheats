#include "Cheats/Exploits.hpp"

namespace CTRPluginFramework
{
    void ChangeOwner(MenuEntry* entry) {
        const std::vector<std::string> enable_or_disable = {
            "Player 1",
            "Player 2",
            "Player 3",
            "Player 4"
        };

        Keyboard keyboard("オーナーを誰にしますか？", enable_or_disable);

		int index = keyboard.Open();
		if(index < 0)
			return;

		switch (index) {
			default: break;

            case 0: {
                Process::Write32(0x0824B1EC, 0x00000000);
                break;
            }

            case 1: {
                Process::Write32(0x0824B1EC, 0x00000001);
                break;
            }

            case 2: {
                Process::Write32(0x0824B1EC, 0x00000002);
                break;
            }

            case 3: {
                Process::Write32(0x0824B1EC, 0x00000003);
                break;
            }
        }
    }

    void KickMember(MenuEntry* entry) {
        const std::vector<std::string> enable_or_disable = {
            "Player 1",
            "Player 2",
            "Player 3",
            "Player 4",
            "全員"
        };

        Keyboard keyboard("誰をキックしますか？", enable_or_disable);

		int index = keyboard.Open();
		if(index < 0)
			return;

		switch (index) {
			default: break;

            case 0: {
                Process::Write8(0x0824B424, 0x01);
                break;
            }

            case 1: {
                Process::Write8(0x0824B62C, 0x01);
                break;
            }

            case 2: {
                Process::Write8(0x0824B834, 0x01);
                break;
            }

            case 3: {
                Process::Write8(0x0824BA3C, 0x01);
                break;
            }

            case 4: {
                Process::Write8(0x0824B424 , 0x01);
                Process::Write8(0x0824B62C , 0x01);
                Process::Write8(0x0824B834 , 0x01);
                Process::Write8(0x0824BA3C , 0x01);
                break;
            }
        }
    }
}